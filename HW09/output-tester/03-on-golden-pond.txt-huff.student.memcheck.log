==31111== Memcheck, a memory error detector
==31111== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==31111== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==31111== Command: ./student.out t inputs/03-on-golden-pond.txt-huff
==31111== Parent PID: 31110
==31111== 
--31111-- 
--31111-- Valgrind options:
--31111--    --tool=memcheck
--31111--    --leak-check=full
--31111--    --verbose
--31111--    --log-file=memcheck.log
--31111-- Contents of /proc/version:
--31111--   Linux version 2.6.32-431.11.2.el6.x86_64 (mockbuild@x86-027.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Mon Mar 3 13:32:45 EST 2014
--31111-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--31111-- Page sizes: currently 4096, max supported 4096
--31111-- Valgrind library directory: /usr/lib64/valgrind
--31111-- Reading syms from /tmp/.6mb7ak/student.out
--31111-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--31111--    object doesn't have a dynamic symbol table
--31111-- Reading syms from /lib64/ld-2.12.so
--31111-- Scheduler: using generic scheduler lock implementation.
--31111-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==31111== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-31111-by-mluzarow-on-ecelinux24.ecn.purdue.edu
==31111== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-31111-by-mluzarow-on-ecelinux24.ecn.purdue.edu
==31111== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-31111-by-mluzarow-on-ecelinux24.ecn.purdue.edu
==31111== 
==31111== TO CONTROL THIS PROCESS USING vgdb (which you probably
==31111== don't want to do, unless you know exactly what you're doing,
==31111== or are doing some strange experiment):
==31111==   /usr/lib64/valgrind/../../bin/vgdb --pid=31111 ...command...
==31111== 
==31111== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==31111==   /path/to/gdb ./student.out
==31111== and then give GDB the following command
==31111==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=31111
==31111== --pid is optional if only one valgrind process is running
==31111== 
--31111-- REDIR: 0x3600e17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--31111-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--31111-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--31111-- REDIR: 0x3600e173a0 (index) redirected to 0x4a07bf0 (index)
--31111-- REDIR: 0x3600e17420 (strcmp) redirected to 0x4a08530 (strcmp)
--31111-- Reading syms from /lib64/libc-2.12.so
--31111-- REDIR: 0x3601284fb0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31111-- REDIR: 0x3601287270 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31111-- REDIR: 0x3601282f20 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--31111-- REDIR: 0x360127f9c0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31111-- REDIR: 0x3601328590 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
--31111-- REDIR: 0x360128add0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--31111-- REDIR: 0x36012847e0 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--31111-- REDIR: 0x360127b800 (free) redirected to 0x4a06369 (free)
--31111-- REDIR: 0x360127a920 (malloc) redirected to 0x4a0696c (malloc)
==31111== Conditional jump or move depends on uninitialised value(s)
==31111==    at 0x400E4E: HuffTree_readTextHeader (answer09.c:201)
==31111==    by 0x401ECC: process_file (example.c:27)
==31111==    by 0x40209A: main (example.c:81)
==31111== 
==31111== Conditional jump or move depends on uninitialised value(s)
==31111==    at 0x400E62: HuffTree_readTextHeader (answer09.c:201)
==31111==    by 0x401ECC: process_file (example.c:27)
==31111==    by 0x40209A: main (example.c:81)
==31111== 
--31111-- REDIR: 0x3601281440 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
==31111== 
==31111== HEAP SUMMARY:
==31111==     in use at exit: 0 bytes in 0 blocks
==31111==   total heap usage: 122 allocs, 122 frees, 3,605 bytes allocated
==31111== 
==31111== All heap blocks were freed -- no leaks are possible
==31111== 
==31111== Use --track-origins=yes to see where uninitialised values come from
==31111== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==31111== 
==31111== 1 errors in context 1 of 2:
==31111== Conditional jump or move depends on uninitialised value(s)
==31111==    at 0x400E62: HuffTree_readTextHeader (answer09.c:201)
==31111==    by 0x401ECC: process_file (example.c:27)
==31111==    by 0x40209A: main (example.c:81)
==31111== 
==31111== 
==31111== 1 errors in context 2 of 2:
==31111== Conditional jump or move depends on uninitialised value(s)
==31111==    at 0x400E4E: HuffTree_readTextHeader (answer09.c:201)
==31111==    by 0x401ECC: process_file (example.c:27)
==31111==    by 0x40209A: main (example.c:81)
==31111== 
--31111-- 
--31111-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--31111-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==31111== 
==31111== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
