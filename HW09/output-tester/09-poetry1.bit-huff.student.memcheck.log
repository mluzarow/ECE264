==29142== Memcheck, a memory error detector
==29142== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==29142== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==29142== Command: ./student.out b inputs/09-poetry1.bit-huff
==29142== Parent PID: 29141
==29142== 
--29142-- 
--29142-- Valgrind options:
--29142--    --tool=memcheck
--29142--    --leak-check=full
--29142--    --verbose
--29142--    --log-file=memcheck.log
--29142-- Contents of /proc/version:
--29142--   Linux version 2.6.32-431.11.2.el6.x86_64 (mockbuild@x86-027.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Mon Mar 3 13:32:45 EST 2014
--29142-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--29142-- Page sizes: currently 4096, max supported 4096
--29142-- Valgrind library directory: /usr/lib64/valgrind
--29142-- Reading syms from /tmp/.Fjgywj/student.out
--29142-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--29142--    object doesn't have a dynamic symbol table
--29142-- Reading syms from /lib64/ld-2.12.so
--29142-- Scheduler: using generic scheduler lock implementation.
--29142-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==29142== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-29142-by-mluzarow-on-ecelinux24.ecn.purdue.edu
==29142== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-29142-by-mluzarow-on-ecelinux24.ecn.purdue.edu
==29142== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-29142-by-mluzarow-on-ecelinux24.ecn.purdue.edu
==29142== 
==29142== TO CONTROL THIS PROCESS USING vgdb (which you probably
==29142== don't want to do, unless you know exactly what you're doing,
==29142== or are doing some strange experiment):
==29142==   /usr/lib64/valgrind/../../bin/vgdb --pid=29142 ...command...
==29142== 
==29142== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==29142==   /path/to/gdb ./student.out
==29142== and then give GDB the following command
==29142==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=29142
==29142== --pid is optional if only one valgrind process is running
==29142== 
--29142-- REDIR: 0x3600e17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--29142-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--29142-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--29142-- REDIR: 0x3600e173a0 (index) redirected to 0x4a07bf0 (index)
--29142-- REDIR: 0x3600e17420 (strcmp) redirected to 0x4a08530 (strcmp)
--29142-- Reading syms from /lib64/libc-2.12.so
--29142-- REDIR: 0x3601284fb0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29142-- REDIR: 0x3601287270 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29142-- REDIR: 0x3601282f20 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--29142-- REDIR: 0x360127f9c0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29142-- REDIR: 0x3601328590 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
--29142-- REDIR: 0x360128add0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--29142-- REDIR: 0x36012847e0 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--29142-- REDIR: 0x360127b800 (free) redirected to 0x4a06369 (free)
--29142-- REDIR: 0x360127a920 (malloc) redirected to 0x4a0696c (malloc)
==29142== Invalid write of size 1
==29142==    at 0x400F9E: HuffTree_readBinaryHeader (answer09.c:194)
==29142==    by 0x401FAE: process_file (example.c:29)
==29142==    by 0x40216A: main (example.c:81)
==29142==  Address 0x4d393bf is 0 bytes after a block of size 255 alloc'd
==29142==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29142==    by 0x400F7B: HuffTree_readBinaryHeader (answer09.c:188)
==29142==    by 0x401FAE: process_file (example.c:29)
==29142==    by 0x40216A: main (example.c:81)
==29142== 
--29142-- REDIR: 0x3601281440 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--29142-- REDIR: 0x360127a560 (calloc) redirected to 0x4a056d7 (calloc)
--29142-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--29142-- si_code=80;  Faulting address: 0x0;  sp: 0x402f04de0

valgrind: the 'impossible' happened:
   Killed by fatal signal
==29142==    at 0x3803EC04: vgPlain_arena_malloc (m_mallocfree.c:291)
==29142==    by 0x38003C34: vgMemCheck_new_block (mc_malloc_wrappers.c:263)
==29142==    by 0x38003EE2: vgMemCheck_calloc (mc_malloc_wrappers.c:341)
==29142==    by 0x3807A0AD: vgPlain_scheduler (scheduler.c:1673)
==29142==    by 0x380A5A19: run_a_thread_NORETURN (syswrap-linux.c:103)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable
==29142==    at 0x4A0577B: calloc (vg_replace_malloc.c:593)
==29142==    by 0x400FD2: Queue_create (treefun.c:37)
==29142==    by 0x4019E6: HuffNode_printPretty_Worker (treefun.c:270)
==29142==    by 0x401BA7: HuffNode_printPretty (treefun.c:301)
==29142==    by 0x401BFB: HuffNode_print (treefun.c:312)
==29142==    by 0x401FD2: process_file (example.c:31)
==29142==    by 0x40216A: main (example.c:81)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

